Testing version: draft
strict mode: "items" is 1-tuple, but minItems or maxItems/additionalItems are not specified or different at path "type.json"
alma/(CKB)5280000000199164.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/2/componentList/1',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/2',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/2/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/2',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/3/componentList/2',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/3',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/3/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/3',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT000161712.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/9/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/10/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/11/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/12/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/13/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT000312236.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/9/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/10/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/11/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/12/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/13/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/1/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/1/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/0/componentList/1',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/2/componentList/1',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/2',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/2/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/2',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT003176544.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/1',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/1/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/1/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/1',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/2',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/2/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/2/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/2',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/3',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/3/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/3/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/3',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/4',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/4/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/4/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/4',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/5',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/5/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/5/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/5',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/6',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/6/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/6/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/6',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/7',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/7/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/7/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/7',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/8',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/8/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/8/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/8',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT004285445.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/language/0/id',
    schemaPath: 'language.json/items/properties/id/pattern',
    keyword: 'pattern',
    params: { pattern: '^http://id.loc.gov/vocabulary/iso639-2/[a-z]{3}' },
    message: 'must match pattern "^http://id.loc.gov/vocabulary/iso639-2/[a-z]{3}"'
  },
  {
    instancePath: '/language/0/id',
    schemaPath: 'language.json/items/properties/id/format',
    keyword: 'format',
    params: { format: 'uri' },
    message: 'must match format "uri"'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT005207972.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT006855611.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT012734833.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT012734884.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT015011399.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT015671602.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT016433929.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/9/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/10/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT016709661.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/0/componentList/2',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/0/componentList/3',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT017015300.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/9/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/10/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/11/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/12/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/13/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/14/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/15/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/isPartOf/1/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT017398609.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT017411546.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/1',
    schemaPath: 'publication.json/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/publication/1/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/1/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/0/componentList/2',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/0/componentList/3',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/1/componentList/2',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/1/componentList/3',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/1',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/1/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/1',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/2/componentList/1',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/2/componentList/2',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/2/componentList/3',
    schemaPath: 'complexSubject.json/properties/componentList/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/2',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/2/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/2',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT017664407.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT019075404.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT019246898.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/9/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/10/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/11/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/12/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/13/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/14/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/15/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/16/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/17/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/18/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/19/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/20/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/21/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/22/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/23/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/isPartOf/1/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT019631849.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/9/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/10/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/11/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/12/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/13/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/14/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/15/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/16/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/17/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/18/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/19/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/20/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/21/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/22/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/23/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/isPartOf/1/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'label' },
    message: "must have required property 'label'"
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'label' },
    message: "must have required property 'label'"
  },
  {
    instancePath: '/subject/0',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT020202475.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/0',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/0',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/1',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/1/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/1/type/0',
    schemaPath: 'skosConcept.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Concept' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/1',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
alma/(DE-605)HT020391499.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)HT020936481.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/9/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/10/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/11/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/12/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/13/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/14/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/15/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/16/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/17/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/18/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/19/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/20/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/21/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/22/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/23/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)TT003907920.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(DE-605)TT050421649.json failed test
[
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/3/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/4/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/5/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/6/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/7/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/8/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/isPartOf/0/type',
    schemaPath: 'isPartOf.json/items/properties/type/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
alma/(OCoLC)945571548.json failed test
[
  {
    instancePath: '/contribution/0',
    schemaPath: 'contribution.json/items/required',
    keyword: 'required',
    params: { missingProperty: 'role' },
    message: "must have required property 'role'"
  },
  {
    instancePath: '/hasItem/0/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/1/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/hasItem/2/type/0',
    schemaPath: 'hasItem.json/items/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'Item' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/oclcNumber',
    schemaPath: '#/properties/oclcNumber/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0',
    schemaPath: 'publication.json/items/required',
    keyword: 'required',
    params: { missingProperty: 'type' },
    message: "must have required property 'type'"
  },
  {
    instancePath: '/publication/0/location',
    schemaPath: 'publication.json/items/properties/location/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/publication/0/publishedBy',
    schemaPath: 'publication.json/items/properties/publishedBy/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  },
  {
    instancePath: '/subject/2',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/2/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/2',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/2',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  },
  {
    instancePath: '/subject/3',
    schemaPath: 'complexSubject.json/required',
    keyword: 'required',
    params: { missingProperty: 'componentList' },
    message: "must have required property 'componentList'"
  },
  {
    instancePath: '/subject/3/type/0',
    schemaPath: 'complexSubject.json/properties/type/items/const',
    keyword: 'const',
    params: { allowedValue: 'ComplexSubject' },
    message: 'must be equal to constant'
  },
  {
    instancePath: '/subject/3',
    schemaPath: 'skosConcept.json/required',
    keyword: 'required',
    params: { missingProperty: 'source' },
    message: "must have required property 'source'"
  },
  {
    instancePath: '/subject/3',
    schemaPath: '#/properties/subject/items/anyOf',
    keyword: 'anyOf',
    params: {},
    message: 'must match a schema in anyOf'
  }
]
Test [0;31mFAILED[0m

