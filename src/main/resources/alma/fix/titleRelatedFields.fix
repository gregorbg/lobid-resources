
#  <!-- 2xx -->

# Variable @title
#  <call-macro name="regex-del-punctuation-end" dsource="245??.a" dname="@title" />

# 245 - Title Statement (NR) - Subfield: $a (NR), $b (NR), $n (R), $p (R)

copy_field("245??.a","@title")
replace_all("@title", "^[©]|\\s?[,.:;/=]?$", "")
replace_all("@title", "<", "")
replace_all("@title", ">", "")

#  <concat delimiter=". " name="@titleOfSubSeries_n" flushWith="245??.p">
#    <data name="n" source="245??.n"/>
#  </concat>

set_array("@titleOfSubSeries_n")
do list(path:"245??.n", "var":"$i")
  copy_field("$i","@titleOfSubSeries_n.$append")
end
join_field("@titleOfSubSeries_n", ". ")


#  <combine name="@titleOfSubSeries" value="${n}${p}" sameEntity="true" flushWith="245??">
#    <data name="p" source="245??.p">
#      <occurrence only="1"/>
#      <replace pattern="\s?\.?\s?$" with=""/>
#      <replace pattern="&gt;" with=""/>
#      <replace pattern="&lt;" with=""/>
#    </data>
#    <data name="n" source="@titleOfSubSeries_n">
#      <regexp match="(.*)" format="${1}: "/>
#    </data>
#  </combine>

set_array("@titleOfSubSeries_p")

do list(path:"245??.p", "var":"$i")
  copy_field("$i","@titleOfSubSeries_p.$append")
end
replace_all("@titleOfSubSeries_p.*", "\\s?\\.?\\s?$", "")
replace_all("@titleOfSubSeries_p.*", "<", "")
replace_all("@titleOfSubSeries_p.*", ">", "")
prepend("@titleOfSubSeries_p.1", ": ")

paste("@titleOfSubSeries", "@titleOfSubSeries_n",  "@titleOfSubSeries_p.1", join_char: "")


#  <data name="titleOfSubSeries" source="@titleOfSubSeries" />

copy_field("@titleOfSubSeries", "titleOfSubSeries")
vacuum()
prepend("@titleOfSubSeries",", ")

#  <combine name="title" value="${maintitle}${subtitle}" flushWith="record">
#    <data name="maintitle" source="@title">
# solved with "@title" variable
#     <!-- Delete not sorting signs in title -->
#     <replace pattern="&gt;" with=""/>
#     <replace pattern="&lt;" with=""/>
#    </data>
#    <data name="subtitle" source="@titleOfSubSeries">
#      <regexp match="(.*)" format=", ${1}"/>
#    </data>
#  </combine>

paste("title","@title", "@titleOfSubSeries", join_char: "")



#  <entity name="alternativeTitle[]" flushWith="record">
#    <data source="246?[ 345678].a">
#      <replace pattern="\.$" with="" />
#    </data>
#  </entity>

# 246 - Varying Form of Title (R) - Subfields: $a (NR)

set_array("alternativeTitle[]")
copy_field("246?[ 345678].a","alternativeTitle[].$append")

#
#  <entity name="otherTitleInformation[]">
#    <data name="" source="245??.b">
#      <occurrence only="1" />
#      <replace pattern="\s?[./]\s?$" with="" />
#    </data>
#  </entity>

set_array("otherTitleInformation[]")
copy_field("245??.b","otherTitleInformation[].$append")
replace_all("otherTitleInformation[].*","\\s?[./]\\s?$","")


#  <entity name="edition[]" flushWith="record">
#    <data name="" source="250  .a">
#      <replace pattern="\s?[=/]$" with="" />
#    </data>
#  </entity>

# 250 - Edition Statement (R) - Subfields: $a (NR)

set_array("edition[]")
copy_field("250  .a","edition[].$append")
replace_all("edition[].*","\\s?[./]\\s?$","")

# 260 - Publication, Distribution, etc. (Imprint) (R) - Subfield: $a (R), $b (R), $c (R)
# 264 - Production, Publication, Distribution, Manufacture, and Copyright Notice (R) -  Subfield: $a (R), $b (R), $c  (R)

set_array("publication[]")
do list(path:"260[ 23] |264[ 23][ 1]", "var":"$i")
  add_field("publication[].$append.test","")
  paste("publication[].$last.publicationHistory", "$i.c")
  replace_all("$i.c", "\\[|\\]|ca. |c ", "")
  if any_match("$i.c",".*?(\\d{4}).*")  
    paste("publication[].$last.startDate", "$i.c")
  end
  if any_match("$i.c",".*-(\\d{4})$")  
    paste("publication[].$last.endDate", "$i.c")
  end
  # TODO is there a way to distinguish PublicationEvent and SecondaryPublicationEvent? 
  set_array("publication[].$last.type[]","PublicationEvent")
  set_array("publication[].$last.location[]")
  copy_field("$i.a", "publication[].$last.location[].$append")
  set_array("publication[].$last.publishedBy[]")
  copy_field("$i.b", "publication[].$last.publishedBy[].$append")
end

replace_all("publication[].*.startDate", ".*?(\\d{4}).*", "$1")
replace_all("publication[].*.endDate", ".*-(\\d{4})$", "$1")

replace_all("publication[].*.location[].*", "^\\[|\\]$", "")

replace_all("publication[].*.publishedBy[].*", "^[©]|\\s?[,.:;/=]?$", "")
